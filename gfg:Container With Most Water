/*Given N non-negative integers a1,a2,....an where each represents a point at coordinate (i, ai). N vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i,0). Find two lines, which together with x-axis forms a container, such that it contains the most water.

Note : In Case of single verticle line it will not be able to hold water.

Example 1:

Input:
N = 4
a[] = {1,5,4,3}
Output: 6
Explanation: 5 and 3 are distance 2 apart.
So the size of the base = 2. Height of
container = min(5, 3) = 3. So total area
= 3 * 2 = 6.
*/
//tc=o(n)
//sc=o(1)


long long maxArea(long long arr[], int n)
{
    long long maxi=0;
int i=0,j=n-1;
while(i<j)
{
long long     int wd=j-i;
long long int h=min(arr[i],arr[j]);
maxi=max(maxi,h*wd);
if(arr[i]<arr[j])
{
    i++;
}
else
{
    j--;
}
}
return maxi;
}
