/*Given the head of a singly linked list, return the middle node of the linked list.

If there are two middle nodes, return the second middle node.
*/
//tc=o(n)
//sc=o(1)
    ListNode* middleNode(ListNode* head) {
  ListNode* slow=head;
   ListNode* fast=head;
   while (fast->next && fast->next->next)
       {
     slow=slow->next;
    fast=fast->next->next;
       
      }
    return fast->next==NULL?slow:slow->next;
    }
