Given two binary strings A and B consisting of only 0s and 1s. Find the resultant string after adding the two Binary Strings.
//tc o(n+m)
//sc=max(n,m)

	string addBinary(string s1, string s2)
	{
	   string str="";
	  int n1=s1.size()-1;
	  int n2=s2.size()-1;
	  char carry='0';
while(n1>=0 && n2>=0)
	  {
if(s1[n1]=='1' && s2[n2]=='1')
	      {
	          if(carry=='0')
	          {
	          str+='0';
	          carry='1';
	          }
	          else if(carry=='1')
	          {
	              str+='1';
	              carry='1';
	          }
	      }
else if(s1[n1]=='0' && s2[n2]=='0')
{
 if(carry=='1')
 {
     str+='1';
     carry='0';
 }
 else if(carry=='0')
 {
     str+='0';
     carry='0';
 }
}
else 
{
    if(carry=='1')
    {
        str+='0';
        carry='1';
    }
    else if(carry=='0')
    {
        str+='1';
        carry='0';
    }
}
n1--;
n2--;
}
while(n1>=0)
{
    if(s1[n1]=='0')
    {
        if(carry=='0')
        {
            str+='0';
            carry='0';
        }
        else
        {
            str+='1';
            carry='0';
        }
    }
    else
    {
        //when it have one..
        if(carry=='0')
        {
            str+='1';
            carry='0';
        }
        else
        {
            //caeery and index both is 1..
            str+='0';
            carry='1';
        }
        
    }
    n1--;
}

//for second remaining string..
while(n2>=0)
{
    if(s2[n2]=='0')
    {
        if(carry=='0')
        {
            str+='0';
            carry='0';
        }
        else
        {
            str+='1';
            carry='0';
        }
    }
    else
    {
        //when it have one..
        if(carry=='0')
        {
            str+='1';
            carry='0';
        }
        else
        {
            //caeery and index both is 1..
            str+='0';
            carry='1';
        }
        
    }
    n2--;
}
if(carry=='1')
{
    str+='1';
}
reverse(str.begin(),str.end());
int i=0;
while(str[i]=='0' && i<str.size())
{
    i++;
}
str=str.substr(i);
return str;
	  }
	  
