/*Given two singly linked lists of size N and M, write a program to get the point where two linked lists intersect each other.

 

Example 1:

Input:
LinkList1 = 3->6->9->common
LinkList2 = 10->common
common = 15->30->NULL
Output: 15
Explanation:
Y ShapedLinked List
Example 2:

Input: 
Linked List 1 = 4->1->common
Linked List 2 = 5->6->1->common
common = 8->4->5->NULL
Output: 8
Explanation: 

4              5
|              |
1              6
 \             /
  8   -----  1 
   |
   4
   |
  5
  |
  NULL       
*/


 int intersectPoint(Node* head1, Node* head2)
    {
        // Your Code Here
int len1=0,len2=0;

Node* temp1=head1;
Node* temp2=head2;
while(temp1!=NULL)
{
    temp1=temp1->next;
    len1++;
}
while(temp2!=NULL)
{
    temp2=temp2->next;
    len2++;
}
int rem;
temp1=head1;
temp2=head2;
//cout<<temp1->val<<" "<<temp2->val<<endl;
         int len=abs(len1-len2);
if(len1==len2)
{
temp1=head1;
temp2=head2;
}
   
else if(len2>len1)
{
    while(temp2!=NULL)
    {
    temp2=temp2->next;
len--;
        if(len==0)
        {
            break;
        }
    }
}
else 
{
     while(temp1!=NULL)
    {
    temp1=temp1->next;
len--;
        if(len==0)
        {
            break;
        }
    }
}

while(temp1!=NULL && temp2!=NULL)
{
    if(temp1==temp2)
    {
        return temp1->data;
    }
    temp1=temp1->next;
    temp2=temp2->next;
}
   return -1;

    }
