/*You are given an array consisting of n integers which denote the position of a stall. You are also given an integer k which denotes the number of aggressive cows. You are given the task of assigning stalls to k cows such that the minimum distance between any two of them is the maximum possible.
The first line of input contains two space-separated integers n and k.*/
//tc o(nlogn)
bool ispossible(vector<int>&arr,int mid,int k)
{
    int count=1;
    int last_cow=arr[0];
    for(int i=1;i<arr.size();i++)
    {
        //check can we find the ditance mid or greater than
        if(arr[i]-last_cow>=mid)
        {
            count++;
            last_cow=arr[i];
        }
        
    }
    return count>=k;
}
int solve(int n, int k, vector<int> &arr) {

sort(arr.begin(),arr.end());
int low=0,high=arr[n-1]-arr[0];
int ans=1;
    while(low<=high)
    {
         int mid=low+(high-low)/2;
        if(ispossible(arr,mid,k))
        {
            ans=mid;
            low=mid+1;
        }
        else
        {
            high=mid-1;
        }
    }
    return ans;
    }
