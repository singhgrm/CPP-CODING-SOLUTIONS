/*Given an array arr[] consisting of n integers, find the length of the longest subarray with positive (non zero) product.

 

Example 1:

Input:
arr[] ={0, 1, -2, -3, -4} 
Output:
3
Explanation: 
The longest subarray with positive product is: 
{1, -2, -3}.Therefore, the required length is 3.
 

Example 2:

Input:
arr[]={-1, -2, 0, 1, 2}
Output:
2
Explanation:
The longest subarray with positive products 
are: {-1, -2}, {1, 2}. Therefore, the required 
length is 2.
*/
//tc=o(n)
//sc=o(1)

  int maxLength(vector<int> &arr,int n){
           //code here
    int pos = 0, neg= 0, maxi= 0;

 for (int i=0;i<n;i++) {

 if (arr[i] == 0) pos = 0, neg= 0;

 else {

 if (arr[i] < 0) swap(pos, neg);

 if (pos > 0 || arr[i] > 0) ++pos;

 if (neg > 0 || arr[i] < 0) ++neg;

 maxi = max(maxi, pos);

 }

 }

 return maxi;


        }
